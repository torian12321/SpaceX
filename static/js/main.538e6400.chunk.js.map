{"version":3,"sources":["components/Modal/Modal.module.scss","components/LaunchCard/LaunchCard.module.css","App/ModalDetails/ModalDetails.module.scss","components/Button/Button.module.scss","components/Loader/Loader.module.scss","components/Loader/index.ts","components/Loader/Loader.tsx","components/LaunchCard/LaunchCard.tsx","components/LaunchCard/LaunchCard.List.tsx","components/LaunchCard/index.ts","components/Modal/Modal.tsx","hooks/useEventListener.ts","components/Modal/useModal.ts","hooks/useKeyPress.ts","components/Button/Button.tsx","App/ModalDetails/ModalDetails.tsx","App/App.tsx","App/index.ts","reportWebVitals.ts","index.tsx"],"names":["module","exports","Loader","className","aria-label","classNames","styles","loader","formatDate","date","d","Date","getDate","getMonth","getFullYear","Card","id","title","details","onClick","card","role","List","children","wrapper","LaunchCard","Modal","props","isVisible","onDismiss","_dBody","document","body","useEffect","classList","add","body_hasModal","remove","ReactDOM","createPortal","modal_BG","modal","Header","header","Body","Footer","footer","useEventListener","eventName","handler","element","window","savedHandler","useRef","current","addEventListener","eventListener","event","removeEventListener","useModal","useState","setIsVisible","escIsPressed","targetKey","keyPressed","setKeyPressed","key","keyCode","useKeyPress","hiddeModal","showModal","Button","label","disabled","type","content","btn","ModalDetails","closeAction","data","desc","img","link","style","backgroundImage","options","location","href","query","gql","App","useQuery","loading","error","selectedLaunch","setSelectedLaunch","launchesPast","handleClickLaunchCard","mission","find","launch","links","flickr_images","console","log","mission_name","article_link","map","launch_date_utc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","cache","InMemoryCache","HttpLink","uri","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.538e6400.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_hasModal\":\"Modal_body_hasModal__35BAE\",\"wrapper\":\"Modal_wrapper__2ETQd\",\"modal\":\"Modal_modal__3zAo_\",\"fadeIn\":\"Modal_fadeIn__3akfE\",\"modal_BG\":\"Modal_modal_BG__3nMwl\",\"fadeI_BG\":\"Modal_fadeI_BG__XYwt0\",\"header\":\"Modal_header__1gwYa\",\"body\":\"Modal_body__3DgUb\",\"footer\":\"Modal_footer__1zNuR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LaunchCard_wrapper__3CvXK\",\"card\":\"LaunchCard_card__znk9K\",\"title\":\"LaunchCard_title__3NRzN\",\"date\":\"LaunchCard_date__2z8ZZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"ModalDetails_header__2XRWr\",\"body\":\"ModalDetails_body__1bNi2\",\"title\":\"ModalDetails_title__2hDEv\",\"options\":\"ModalDetails_options__YhGKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3akLw\",\"disabled\":\"Button_disabled__1w0c7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2be7Y\",\"moveInFromLeft\":\"Loader_moveInFromLeft__wbxlZ\"};","import Loader from './Loader';\r\n\r\nexport default Loader;\r\nexport { Loader };\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport  { ILoader } from './Loader.interfaces';\r\nimport styles from './Loader.module.scss';\r\n\r\nconst Loader = ({ className }: ILoader) => (\r\n  <div\r\n    aria-label='Loading'\r\n    className={classNames(\r\n      styles.loader,\r\n      className,\r\n    )}\r\n  />\r\n);\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport List from './LaunchCard.List';\r\nimport  { ILaunchCard } from './LaunchCard.interfaces';\r\nimport styles from './LaunchCard.module.css';\r\n\r\nconst formatDate = (date: string) => {\r\n  const d = new Date(date);\r\n  return `${d.getDate()}/${d.getMonth()}${d.getFullYear()}`;\r\n}\r\n\r\nconst Card = ({ id, title, details, date, onClick }: ILaunchCard) => {\r\n  const handleOnClick = () => {\r\n    onClick(id);\r\n  };\r\n\r\n  return !!details ? (\r\n    <article className={styles.card} onClick={handleOnClick} role='button'>\r\n      <h1 className={styles.title}>{title}</h1>\r\n      <p>{details}\r\n      </p>\r\n      <span className={styles.date}>\r\n        {formatDate(date)}\r\n      </span>\r\n    </article>\r\n  ) : null;\r\n};\r\n\r\nCard.List = List;\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport  { ILaunchCardList } from './LaunchCard.interfaces';\r\nimport styles from './LaunchCard.module.css';\r\n\r\nconst List = ({ children }: ILaunchCardList) => (\r\n  <div className={styles.wrapper}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default List;\r\n","import LaunchCard from './LaunchCard';\r\nimport LaunchCardList from './LaunchCard.List';\r\n\r\nexport default LaunchCard;\r\nexport { LaunchCard, LaunchCardList };\r\n","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport classNames from \"classnames\";\r\nimport { IModal } from \"./Modal.interfaces\";\r\nimport styles from \"./Modal.module.scss\";\r\n\r\nconst Modal = (props: IModal) => {\r\n  const {\r\n    children,\r\n    className,\r\n    isVisible = false,\r\n    onDismiss = () => {}\r\n  } = props;\r\n  const { body: _dBody } = document;\r\n\r\n  useEffect(() => {\r\n    // When on screen, block the page scroll\r\n    _dBody.classList.add(styles.body_hasModal);\r\n\r\n    return () => {\r\n      _dBody.classList.remove(styles.body_hasModal);\r\n    };\r\n  }, [_dBody]);\r\n\r\n  useEffect(() => {\r\n    if (isVisible) {\r\n      _dBody.classList.add(styles.body_hasModal);\r\n    } else {\r\n      _dBody.classList.remove(styles.body_hasModal);\r\n      onDismiss();\r\n    }\r\n  }, [isVisible, onDismiss, _dBody]);\r\n\r\n  return isVisible\r\n    ? ReactDOM.createPortal(\r\n        <div className={classNames(styles.wrapper, className)}>\r\n          <div className={styles.modal_BG} />\r\n          <div className={styles.modal}>{children}</div>\r\n        </div>,\r\n        _dBody\r\n      )\r\n    : null;\r\n};\r\n\r\nconst Header = ({ children, className }: any) => (\r\n  <div className={classNames(styles.header, className)}>{children}</div>\r\n);\r\nconst Body = ({ children, className }: any) => (\r\n  <div className={classNames(styles.body, className)}>{children}</div>\r\n);\r\nconst Footer = ({ children, className }: any) => (\r\n  <div className={classNames(styles.footer, className)}>{children}</div>\r\n);\r\n\r\nModal.Header = Header;\r\nModal.Body = Body;\r\nModal.Footer = Footer;\r\n\r\nexport { Modal };\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nconst useEventListener = (\r\n  eventName: string,\r\n  handler: any,\r\n  element: any = window\r\n) => {\r\n  // Create a ref that stores handler\r\n  const savedHandler: any = useRef();\r\n\r\n  // Update ref.current value if handler changes.\r\n  // This allows our effect below to always get latest handler ...\r\n  // ... without us needing to pass it in effect deps array ...\r\n  // ... and potentially cause effect to re-run every render.\r\n  useEffect(() => {\r\n    savedHandler.current = handler;\r\n  }, [handler]);\r\n\r\n  useEffect(() => {\r\n    // Make sure element supports addEventListener\r\n    const isSupported = element && element.addEventListener;\r\n    if (!isSupported) return;\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    const eventListener = (event: any) => savedHandler.current(event);\r\n\r\n    // Add event listener\r\n    element.addEventListener(eventName, eventListener);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      element.removeEventListener(eventName, eventListener);\r\n    };\r\n  }, [eventName, element]); // Re-run if eventName or element changes\r\n};\r\n\r\nexport { useEventListener };\r\n","import { useState, useEffect } from \"react\";\r\nimport { useKeyPress } from \"../../hooks\";\r\n\r\n/**\r\n * Hook returning <Modal /> controllers\r\n *\r\n */\r\nconst KEY_ESC = 27;\r\n\r\nconst useModal = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const escIsPressed = useKeyPress(KEY_ESC);\r\n  const hiddeModal = () => setIsVisible(false);\r\n  const showModal = () => setIsVisible(true);\r\n\r\n  useEffect(() => {\r\n    // Remove the Modal from the screen when ESC is pressed\r\n    if (isVisible && escIsPressed) {\r\n      hiddeModal();\r\n    }\r\n  }, [isVisible, escIsPressed]);\r\n\r\n  return {\r\n    isVisible,\r\n    showModal,\r\n    hiddeModal\r\n  };\r\n};\r\n\r\nexport { useModal };\r\n","import { useState } from \"react\";\r\nimport { useEventListener } from \"./\";\r\n\r\nconst useKeyPress = (targetKey: string | number) => {\r\n  // State for keeping track of whether key is pressed\r\n  const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n  // If pressed key is our target key then set to true\r\n  const downHandler = ({ key, keyCode }: any) => {\r\n    if (key === targetKey || keyCode === targetKey) {\r\n      setKeyPressed(true);\r\n    }\r\n  };\r\n\r\n  // If released key is our target key then set to false\r\n  const upHandler = ({ key, keyCode }: any) => {\r\n    if (key === targetKey || keyCode === targetKey) {\r\n      setKeyPressed(false);\r\n    }\r\n  };\r\n\r\n  // Add event listeners\r\n  useEventListener(\"keydown\", downHandler, window);\r\n  useEventListener(\"keyup\", upHandler, window);\r\n\r\n  return keyPressed;\r\n};\r\n\r\nexport { useKeyPress };\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { IButton } from './Button.interfaces';\r\nimport styles from './Button.module.scss';\r\n\r\nconst Button = ({\r\n  children,\r\n  label,\r\n  onClick,\r\n  disabled = false,\r\n  type = 'button',\r\n}: IButton) => {\r\n  const content = children || label;\r\n  const handleClick = () => {\r\n    if (!disabled && onClick) {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  return content ? (\r\n    <button\r\n      className={classNames(\r\n        styles.btn,\r\n        disabled && styles.disabled,\r\n      )}\r\n      onClick={handleClick}\r\n      type={type}\r\n      disabled={disabled}\r\n    >\r\n      {content}\r\n    </button>\r\n  ) : null;\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { Modal } from \"../../components/Modal\";\r\nimport { Button } from \"../../components/Button\";\r\nimport { IModalDetails } from './ModalDetails.interfaces';\r\nimport styles from \"./ModalDetails.module.scss\";\r\n\r\nconst ModalDetails = ({ closeAction, isVisible, data }: IModalDetails) => {\r\n  const { title, desc, img = '', link } = data;\r\n  const style = !!img\r\n    ? { backgroundImage: `url(${img})` }\r\n    : {}\r\n\r\n  const handleRedirection = () => {\r\n    window.location.href = link;\r\n  }\r\n  return (\r\n    <Modal className={styles.modal} isVisible={isVisible}>\r\n      <div className={styles.header} style={style} />\r\n      <div className={styles.body} >\r\n        <h4 className={styles.title}>{title}</h4>\r\n        <span>{desc}</span>\r\n\r\n        <div className={styles.options}>\r\n          <Button onClick={closeAction} label='Close' />\r\n          {!!link &&\r\n            <Button onClick={handleRedirection} label='See more' />\r\n          }\r\n        </div>\r\n        \r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalDetails;\r\n","import React, { useState } from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport Loader from '../components/Loader';\r\nimport LaunchCards from '../components/LaunchCard';\r\nimport { useModal } from \"../components/Modal\";\r\nimport { ModalDetails } from \"./ModalDetails\";\r\nimport './App.css';\r\n\r\nconst query = gql`{\r\n  launchesPast(limit: 10) {\r\n    id\r\n    mission_name\r\n    details\r\n    launch_date_utc\r\n    links {\r\n      article_link\r\n      flickr_images\r\n    }\r\n  }\r\n}`;\r\n\r\ntype Launche = {\r\n  id: string,\r\n  mission_name: string,\r\n  details: string,\r\n  launch_date_utc: string,\r\n  links: {\r\n    article_link: string,\r\n    flickr_images: string[],\r\n  }\r\n}; \r\n\r\nconst App = () => {\r\n  const { loading, error, data = {} } = useQuery(query);\r\n  const [selectedLaunch, setSelectedLaunch]: any = useState({});\r\n  const { showModal, hiddeModal, isVisible } = useModal();\r\n  const { launchesPast = []} = data;\r\n  \r\n  const handleClickLaunchCard = (id: string) => {\r\n    const mission: Launche = launchesPast.find((launch: Launche) => launch.id === id)\r\n    const { links } = mission;\r\n    const { flickr_images = [] } = links;\r\n    // console.log(flickr_images);\r\n    console.log(mission);\r\n    setSelectedLaunch({\r\n      title: mission.mission_name,\r\n      desc: mission.details,\r\n      img: flickr_images[0] || '',\r\n      link: links.article_link,\r\n    });\r\n\r\n    showModal();\r\n  }\r\n\r\n  if (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <ModalDetails closeAction={hiddeModal} isVisible={isVisible} data={selectedLaunch} />\r\n\r\n    <div className=\"App\">\r\n      <h2>Last launches 🚀</h2>\r\n      {loading\r\n        ? <Loader />\r\n        : (\r\n          <LaunchCards.List>\r\n            {launchesPast.map((launch: Launche) => <LaunchCards\r\n              key={launch.id}\r\n              id={launch.id}\r\n              title={launch.mission_name}\r\n              details={launch.details}\r\n              date={launch.launch_date_utc}\r\n              onClick={handleClickLaunchCard}\r\n          />)}\r\n          </LaunchCards.List>\r\n        )}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import App from './App';\r\n\r\nexport default App;\r\nexport { App };\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  ApolloClient,\n  ApolloProvider,\n  HttpLink,\n  InMemoryCache,\n} from '@apollo/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: 'https://api.spacex.land/graphql',\n  }),\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}