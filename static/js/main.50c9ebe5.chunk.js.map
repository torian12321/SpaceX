{"version":3,"sources":["components/Modal/Modal.module.scss","components/LaunchCard/LaunchCard.module.css","App/ModalDetails/ModalDetails.module.scss","components/Button/Button.module.scss","App/App.module.scss","components/Loader/Loader.module.scss","components/Loader/index.ts","components/Loader/Loader.tsx","components/LaunchCard/LaunchCard.tsx","components/LaunchCard/LaunchCard.List.tsx","components/LaunchCard/index.ts","components/Modal/Modal.tsx","hooks/useEventListener.ts","components/Modal/useModal.ts","hooks/useKeyPress.ts","components/Button/Button.tsx","App/ModalDetails/ModalDetails.tsx","App/App.tsx","App/index.ts","reportWebVitals.ts","index.tsx"],"names":["module","exports","Loader","className","aria-label","classNames","styles","loader","formatDate","date","d","Date","getDate","getMonth","getFullYear","Card","id","title","details","onClick","card","role","List","children","wrapper","LaunchCard","Modal","props","isVisible","onDismiss","_dBody","document","body","useEffect","classList","add","body_hasModal","remove","ReactDOM","createPortal","modal_BG","modal","Header","header","Body","Footer","footer","useEventListener","eventName","handler","element","window","savedHandler","useRef","current","addEventListener","eventListener","event","removeEventListener","useModal","useState","setIsVisible","escIsPressed","targetKey","keyPressed","setKeyPressed","key","keyCode","useKeyPress","hiddeModal","showModal","Button","label","disabled","type","content","btn","ModalDetails","closeAction","data","desc","img","link","style","backgroundImage","options","location","href","query","gql","App","useQuery","loading","error","selectedLaunch","setSelectedLaunch","launchesPast","handleClickLaunchCard","mission","find","launch","links","flickr_images","mission_name","article_link","console","log","bg","app","map","launch_date_utc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","cache","InMemoryCache","HttpLink","uri","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.50c9ebe5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_hasModal\":\"Modal_body_hasModal__2-4N4\",\"wrapper\":\"Modal_wrapper__3e00S\",\"modal\":\"Modal_modal__1vwov\",\"fadeIn\":\"Modal_fadeIn__2VbfN\",\"modal_BG\":\"Modal_modal_BG__1w5cI\",\"fadeI_BG\":\"Modal_fadeI_BG__3ygfR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LaunchCard_wrapper__3NVA2\",\"card\":\"LaunchCard_card__vSeQz\",\"title\":\"LaunchCard_title__VTD1b\",\"date\":\"LaunchCard_date__3iYvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"ModalDetails_header__3KDeK\",\"body\":\"ModalDetails_body__Ng59s\",\"title\":\"ModalDetails_title__1Euhl\",\"options\":\"ModalDetails_options__25jsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1Lkv5\",\"disabled\":\"Button_disabled__1f6YP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app___B2LQ\",\"bg\":\"App_bg__2fulN\",\"stars\":\"App_stars__UxdxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2hZcM\",\"moveInFromLeft\":\"Loader_moveInFromLeft__28s9A\"};","import Loader from './Loader';\n\nexport default Loader;\nexport { Loader };\n","import React from 'react';\nimport classNames from 'classnames';\nimport  { ILoader } from './Loader.interfaces';\nimport styles from './Loader.module.scss';\n\nconst Loader = ({ className }: ILoader) => (\n  <div\n    aria-label='Loading'\n    className={classNames(\n      styles.loader,\n      className,\n    )}\n  />\n);\n\nexport default Loader;\n","import React from 'react';\nimport List from './LaunchCard.List';\nimport  { ILaunchCard } from './LaunchCard.interfaces';\nimport styles from './LaunchCard.module.css';\n\nconst formatDate = (date: string) => {\n  const d = new Date(date);\n  return `${d.getDate()}/${d.getMonth()}${d.getFullYear()}`;\n}\n\nconst Card = ({ id, title, details, date, onClick }: ILaunchCard) => {\n  const handleOnClick = () => {\n    onClick(id);\n  };\n\n  return !!details ? (\n    <article className={styles.card} onClick={handleOnClick} role='button'>\n      <h1 className={styles.title}>{title}</h1>\n      <p>{details}\n      </p>\n      <span className={styles.date}>\n        {formatDate(date)}\n      </span>\n    </article>\n  ) : null;\n};\n\nCard.List = List;\n\nexport default Card;\n","import React from 'react';\nimport  { ILaunchCardList } from './LaunchCard.interfaces';\nimport styles from './LaunchCard.module.css';\n\nconst List = ({ children }: ILaunchCardList) => (\n  <div className={styles.wrapper}>\n    {children}\n  </div>\n);\n\nexport default List;\n","import LaunchCard from './LaunchCard';\nimport LaunchCardList from './LaunchCard.List';\n\nexport default LaunchCard;\nexport { LaunchCard, LaunchCardList };\n","import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport classNames from \"classnames\";\nimport { IModal } from \"./Modal.interfaces\";\nimport styles from \"./Modal.module.scss\";\n\nconst Modal = (props: IModal) => {\n  const {\n    children,\n    className,\n    isVisible = false,\n    onDismiss = () => {}\n  } = props;\n  const { body: _dBody } = document;\n\n  useEffect(() => {\n    // When on screen, block the page scroll\n    _dBody.classList.add(styles.body_hasModal);\n\n    return () => {\n      _dBody.classList.remove(styles.body_hasModal);\n    };\n  }, [_dBody]);\n\n  useEffect(() => {\n    if (isVisible) {\n      _dBody.classList.add(styles.body_hasModal);\n    } else {\n      _dBody.classList.remove(styles.body_hasModal);\n      onDismiss();\n    }\n  }, [isVisible, onDismiss, _dBody]);\n\n  return isVisible\n    ? ReactDOM.createPortal(\n        <div className={classNames(styles.wrapper, className)}>\n          <div className={styles.modal_BG} />\n          <div className={styles.modal}>{children}</div>\n        </div>,\n        _dBody\n      )\n    : null;\n};\n\nconst Header = ({ children, className }: any) => (\n  <div className={classNames(styles.header, className)}>{children}</div>\n);\nconst Body = ({ children, className }: any) => (\n  <div className={classNames(styles.body, className)}>{children}</div>\n);\nconst Footer = ({ children, className }: any) => (\n  <div className={classNames(styles.footer, className)}>{children}</div>\n);\n\nModal.Header = Header;\nModal.Body = Body;\nModal.Footer = Footer;\n\nexport { Modal };\n","import { useRef, useEffect } from \"react\";\n\nconst useEventListener = (\n  eventName: string,\n  handler: any,\n  element: any = window\n) => {\n  // Create a ref that stores handler\n  const savedHandler: any = useRef();\n\n  // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(() => {\n    // Make sure element supports addEventListener\n    const isSupported = element && element.addEventListener;\n    if (!isSupported) return;\n\n    // Create event listener that calls handler function stored in ref\n    const eventListener = (event: any) => savedHandler.current(event);\n\n    // Add event listener\n    element.addEventListener(eventName, eventListener);\n\n    // Remove event listener on cleanup\n    return () => {\n      element.removeEventListener(eventName, eventListener);\n    };\n  }, [eventName, element]); // Re-run if eventName or element changes\n};\n\nexport { useEventListener };\n","import { useState, useEffect } from \"react\";\nimport { useKeyPress } from \"../../hooks\";\n\n/**\n * Hook returning <Modal /> controllers\n *\n */\nconst KEY_ESC = 27;\n\nconst useModal = () => {\n  const [isVisible, setIsVisible] = useState(false);\n  const escIsPressed = useKeyPress(KEY_ESC);\n  const hiddeModal = () => setIsVisible(false);\n  const showModal = () => setIsVisible(true);\n\n  useEffect(() => {\n    // Remove the Modal from the screen when ESC is pressed\n    if (isVisible && escIsPressed) {\n      hiddeModal();\n    }\n  }, [isVisible, escIsPressed]);\n\n  return {\n    isVisible,\n    showModal,\n    hiddeModal\n  };\n};\n\nexport { useModal };\n","import { useState } from \"react\";\nimport { useEventListener } from \"./\";\n\nconst useKeyPress = (targetKey: string | number) => {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // If pressed key is our target key then set to true\n  const downHandler = ({ key, keyCode }: any) => {\n    if (key === targetKey || keyCode === targetKey) {\n      setKeyPressed(true);\n    }\n  };\n\n  // If released key is our target key then set to false\n  const upHandler = ({ key, keyCode }: any) => {\n    if (key === targetKey || keyCode === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n\n  // Add event listeners\n  useEventListener(\"keydown\", downHandler, window);\n  useEventListener(\"keyup\", upHandler, window);\n\n  return keyPressed;\n};\n\nexport { useKeyPress };\n","import React from 'react';\nimport classNames from 'classnames';\nimport { IButton } from './Button.interfaces';\nimport styles from './Button.module.scss';\n\nconst Button = ({\n  children,\n  label,\n  onClick,\n  disabled = false,\n  type = 'button',\n}: IButton) => {\n  const content = children || label;\n  const handleClick = () => {\n    if (!disabled && onClick) {\n      onClick();\n    }\n  };\n\n  return content ? (\n    <button\n      className={classNames(\n        styles.btn,\n        disabled && styles.disabled,\n      )}\n      onClick={handleClick}\n      type={type}\n      disabled={disabled}\n    >\n      {content}\n    </button>\n  ) : null;\n};\n\nexport default Button;\n","import React from \"react\";\nimport { Modal } from \"../../components/Modal\";\nimport { Button } from \"../../components/Button\";\nimport { IModalDetails } from './ModalDetails.interfaces';\nimport styles from \"./ModalDetails.module.scss\";\n\nconst ModalDetails = ({ closeAction, isVisible, data }: IModalDetails) => {\n  const { title, desc, img = '', link } = data;\n  const style = !!img\n    ? { backgroundImage: `url(${img})` }\n    : {}\n\n  const handleRedirection = () => {\n    window.location.href = link;\n  }\n  return (\n    <Modal className={styles.modal} isVisible={isVisible}>\n      <div className={styles.header} style={style} />\n      <div className={styles.body} >\n        <h4 className={styles.title}>{title}</h4>\n        <span>{desc}</span>\n\n        <div className={styles.options}>\n          <Button onClick={closeAction} label='Close' />\n          {!!link &&\n            <Button onClick={handleRedirection} label='See more' />\n          }\n        </div>\n        \n      </div>\n    </Modal>\n  );\n};\n\nexport default ModalDetails;\n","import React, { useState } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport Loader from '../components/Loader';\nimport LaunchCards from '../components/LaunchCard';\nimport { useModal } from \"../components/Modal\";\nimport { ModalDetails } from \"./ModalDetails\";\nimport styles from './App.module.scss';\n\nconst query = gql`{\n  launchesPast(limit: 10) {\n    id\n    mission_name\n    details\n    launch_date_utc\n    links {\n      article_link\n      flickr_images\n    }\n  }\n}`;\n\ntype Launche = {\n  id: string,\n  mission_name: string,\n  details: string,\n  launch_date_utc: string,\n  links: {\n    article_link: string,\n    flickr_images: string[],\n  }\n}; \n\nconst App = () => {\n  const { loading, error, data = {} } = useQuery(query);\n  const [selectedLaunch, setSelectedLaunch]: any = useState({});\n  const { showModal, hiddeModal, isVisible } = useModal();\n  const { launchesPast = []} = data;\n  \n  const handleClickLaunchCard = (id: string) => {\n    const mission: Launche = launchesPast.find((launch: Launche) => launch.id === id)\n    const { links } = mission;\n    const { flickr_images = [] } = links;\n\n    setSelectedLaunch({\n      title: mission.mission_name,\n      desc: mission.details,\n      img: flickr_images[0] || '',\n      link: links.article_link,\n    });\n\n    showModal();\n  }\n\n  if (error) {\n    console.log(error);\n  }\n\n  return (\n    <>\n      <div className={styles.bg} />\n      <ModalDetails closeAction={hiddeModal} isVisible={isVisible} data={selectedLaunch} />\n\n      <div className={styles.app}>\n        <h2>Last launches 🚀</h2>\n        {loading\n          ? <Loader />\n          : (\n            <LaunchCards.List>\n              {launchesPast.map((launch: Launche) => <LaunchCards\n                key={launch.id}\n                id={launch.id}\n                title={launch.mission_name}\n                details={launch.details}\n                date={launch.launch_date_utc}\n                onClick={handleClickLaunchCard}\n            />)}\n            </LaunchCards.List>\n          )}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import App from './App';\n\nexport default App;\nexport { App };\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  ApolloClient,\n  ApolloProvider,\n  HttpLink,\n  InMemoryCache,\n} from '@apollo/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: 'https://api.spacex.land/graphql',\n  }),\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}